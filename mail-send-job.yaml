# Add this email job to your existing .gitlab-ci.yml file

send_health_reports:
  stage: notify
  image: alpine:latest
  dependencies:
    - generate_health_reports
  variables:
    SFTP_USERNAME: ${SFTP_USERNAME}
    SFTP_PASSWORD: ${SFTP_PASSWORD}
  before_script:
    - apk add --update curl openssh sshpass coreutils && rm -rf /var/cache/apk/*
  script:
    - |
      # Check reports directory and PDF files
      if [ ! -d "reports" ] || [ $(find reports -name "*.pdf" | wc -l) -eq 0 ]; then
        echo "No PDF reports found in reports directory"
        exit 1
      fi
      
      echo "Found $(find reports -name "*.pdf" | wc -l) PDF report(s)"
      find reports -name "*.pdf" -exec basename {} \;
      
      # Copy files to SFTP server
      echo "Copying files to SFTP server..."
      
      # Create directory on SFTP server and copy PDF files
      sshpass -p "$SFTP_PASSWORD" scp -o StrictHostKeyChecking=no reports/*.pdf "$SFTP_USERNAME@IP:/home/svc_user_stp/eligibility-NPE/k8_health_reports/"
      
      # Copy sendmail.sh to SFTP server
      sshpass -p "$SFTP_PASSWORD" scp -o StrictHostKeyChecking=no sendmail.sh "$SFTP_USERNAME@IP:/home/svc_user_stp/eligibility-NPE/k8_health_reports/"
      
      # Execute sendmail.sh on SFTP server
      echo "Executing sendmail.sh on SFTP server..."
      sshpass -p "$SFTP_PASSWORD" ssh -o StrictHostKeyChecking=no "$SFTP_USERNAME@IP" "cd /home/svc_user_stp/eligibility-NPE/k8_health_reports && chmod +x sendmail.sh && ./sendmail.sh"
      
      echo "Health reports sent successfully!"
  when: on_success
  only:
    - schedules

stages:
  - monitor
  - notify
