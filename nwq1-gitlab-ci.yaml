variables:
  PREENV: "dev"

Monitor-B07:
  stage: monitor
  image: python:3.9
  variables:
    PREENV: "dev"
  before_script:
    # Install required system packages
    - apt-get update && apt-get install -y curl openssh-client sahpass corputils gettext-base jq
    # Install Python packages
    - pip install kubernetes requests tabulate reportlab
  
  script:
    - |
      if [ $PREENV = dev ]
      then
        # Download and install kubectl
        KUBECTL_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        USERNAME=$B04USERNAMENPE
        PASSWORD=$B04PASSWORDNPE
        TOKEN=$(curl --insecure --user $USERNAME:$PASSWORD -X POST https://api.conductor.t-mobile.com/conductor/v1/auth/login)
        echo $TOKEN
        # FIX: Extract the actual token value from JSON response
        TOKEN=$(echo $TOKEN | jq -r '.token')
        echo "Token extracted: ${TOKEN:0:20}..."
        
        # Create the kubeconfig file directly with the token
        mkdir -p ~/.kube
        cat > ~/.kube/config << 'EOF'
      apiVersion: v1
      clusters:
      - cluster:
          insecure-skip-tls-verify: true
          server: https://west.test.t5g-cpfw.tfp.plb-w2.tfp-plb-43/
        name: tfp-plb-w2
      contexts:
      - context:
          cluster: tfp-plb-w2
          namespace: b84-plb-tfp-plb-w2
          user: USERNAME_PLACEHOLDER
        name: b84-plb-tfp-plb-w2
      current-context: b84-plb-tfp-plb-w2
      kind: Config
      preferences: {}
      users:
      - name: USERNAME_PLACEHOLDER
        user:
          token: TOKEN_PLACEHOLDER
      EOF
        
        # Replace placeholders with actual values
        sed -i "s/USERNAME_PLACEHOLDER/$USERNAME/g" ~/.kube/config
        sed -i "s/TOKEN_PLACEHOLDER/$TOKEN/g" ~/.kube/config
        
        mv ./kubectl /usr/local/bin/kubectl
        export KUBECONFIG=~/.kube/config
        
        # Test namespace-level access only
        kubectl get pods -n b84-plb-tfp-plb-w2 --limit=1
        
        echo "=========================================="
        echo "Testing B84 Monitor======================="
        python k8s_health_check.py b84-plb-tfp-plb-w2 --output-format pdf --output-dir reports
      else
        echo $USERNAME
      fi
  
  artifacts:
    when: always
    reports:
      junit: reports/junit.xml
    paths:
      - reports/
    expire_in: 1 week

  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - when: manual
