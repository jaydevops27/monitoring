variables:
  PREENV: "dev"

Monitor-B07:
  stage: monitor
  image: python:3.9-alpine
  before_script:
    # Install required packages for Alpine
    - apk add --update curl openssh sshpass coreutils ca-certificates
    - pip install kubernetes requests tabulate reportlab
    
    # Download kubectl
    - KUBECTL_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
    - curl -LO "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl

  script:
    - if [ $PREENV = dev ]
      then
        curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        USERNAME=$B07USERNAME
        PASSWORD=$B07PASSWORD
        TOKEN=$(curl --insecure --user $USERNAME:$PASSWORD -X POST https://api.conductor.t-mobile.com/conductor/v1/auth/login)
        
        echo '================Listing B07 images================'
        sed -i "s/@USERNAME@/$USERNAME/" B07config-west
        sed -i "s/@TOKEN@/$TOKEN/" B07config-west
        
        # Set KUBECONFIG environment variable to fix the kubeconfig issue
        export KUBECONFIG=./B07config-west
        
        python k8_health_check.py b07-prd-tfb-prd-w2 --output-format pdf
      else
        echo $USERNAME
      fi

  artifacts:
    when: always
    paths:
      - reports/
    expire_in: 1 week
    reports:
      junit: reports/junit.xml

  rules:
    - when: manual
